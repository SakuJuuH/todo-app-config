apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-service
  labels:
    app: todo-service
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: todo-service
  template:
    metadata:
      name: todo-service
      labels:
        app: todo-service
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
        - name: todo-service
          image: europe-west4-docker.pkg.dev/dauntless-glow-470207-m2/my-repository/todo-service
          env:
            - name: PORT
              value: "3001"
            - name: GIN_MODE
              valueFrom:
                configMapKeyRef:
                  name: shared-config
                  key: GIN_MODE
            - name: ALLOWED_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: shared-config
                  key: ALLOWED_ORIGINS
            - name: RANDOM_ARTICLE_URL
              valueFrom:
                configMapKeyRef:
                  name: shared-config
                  key: RANDOM_ARTICLE_URL
            - name: NATS_URL
              valueFrom:
                configMapKeyRef:
                  name: shared-config
                  key: NATS_URL
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_PASSWORD
          resources:
            requests:
              memory: "32Mi"
              cpu: "10m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          readinessProbe:
            httpGet:
              path: /api/todos/db-health
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /api/todos/healthz
              port: 3001
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 3
